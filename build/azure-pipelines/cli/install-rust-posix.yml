parameters:
  - name: channel
    type: string
    default: 1.70.0
  - name: targets
    default: []
    type: object

# Todo: use 1ES pipeline once extension is installed in ADO

steps:
  - script: |
      set -e
      curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    env:
      RUSTUP_TOOLCHAIN: ${{ parameters.channel }}
    displayName: "Install Rust"

  - script: |
      set -e
      mkdir -p .cargo
      echo "[registries]" > .cargo/config.toml
      echo "vscode = { index = \"${CARGO_REGISTRY}\" }" >> .cargo/config.toml
      echo "[source.crates-io]" >> .cargo/config.toml
      echo "replace-with = 'vscode'" >> .cargo/config.toml
      echo "[unstable]" >> .cargo/config.toml
      echo "registry-auth = true" >> .cargo/config.toml
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    condition: and(succeeded(), ne(variables['CARGO_REGISTRY'], 'none'))
    displayName: Setup Cargo Registry

  - task: CargoAuthenticate@0
    inputs:
      configFile: .cargo/config.toml
    displayName: Authenticate Cargo Registry

  - script: |
      set -e
      rustup default $RUSTUP_TOOLCHAIN
      rustup update $RUSTUP_TOOLCHAIN
    env:
      RUSTUP_TOOLCHAIN: ${{ parameters.channel }}
    displayName: "Set Rust version"

  - ${{ each target in parameters.targets }}:
    - script: rustup target add ${{ target }}
      displayName: "Adding Rust target '${{ target }}'"

  - script: |
      set -e
      rustc --version
      cargo --version
      rustup --version
    displayName: "Check Rust versions"
